name: Continuous Deployment

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  deploy:
    name: Deploy Application Infrastructure
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code.
      - name: Checkout code
        uses: actions/checkout@v3  # Uses GitHub Actions (v3) - Automates workflows.
        # Requirement Addressed: Automate the deployment process to ensure consistent and efficient deployment of the application across different environments.
        # Location: Technical Specification/INFRASTRUCTURE/CI/CD Pipeline

      # Step 2: Set up Node.js environment.
      - name: Set up Node.js
        uses: actions/setup-node@v3  # Sets up Node.js environment (v16.x).
        with:
          node-version: '16.x'  # Global Node.js version specified.
        # External Dependency: Node.js v16.x
        # Requirement Addressed: Ensures scripts run in the correct Node.js environment during the CD process.
        # Location: Technical Specification/TECHNOLOGY STACK/Programming Languages

      # Step 3: Install dependencies using npm for the web application.
      - name: Install Web Dependencies
        working-directory: src/web
        run: npm install
        # Internal Dependency: src/web/package.json - Defines scripts and dependencies for the web application.
        # Requirement Addressed: Install necessary packages for building the web application.
        # Location: Technical Specification/TECHNOLOGY STACK/Frameworks and Libraries

      # Step 4: Install dependencies using npm for the admin interface.
      - name: Install Admin Interface Dependencies
        working-directory: src/admin_interface
        run: npm install
        # Internal Dependency: src/admin_interface/package.json - Defines scripts and dependencies for the admin interface.
        # Requirement Addressed: Install necessary packages for building the admin interface.
        # Location: Technical Specification/TECHNOLOGY STACK/Frameworks and Libraries

      # Step 5: Run deployment script using deploy.sh.
      - name: Run Deployment Script
        run: |
          chmod +x infrastructure/scripts/deploy.sh
          infrastructure/scripts/deploy.sh
        # Internal Dependency: infrastructure/scripts/deploy.sh - Automates the deployment of infrastructure using Terraform.
        # Requirement Addressed: Automate infrastructure deployment to ensure consistency and efficiency.
        # Location: Technical Specification/INFRASTRUCTURE/Deployment Environment

      # Step 6: Set up Terraform.
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2  # Sets up Terraform CLI (v1.0.0).
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false
        # External Dependency: Terraform >= 0.12 (Using v1.0.0)
        # Requirement Addressed: Utilize Terraform for infrastructure as code deployment and provisioning.
        # Location: Technical Specification/INFRASTRUCTURE/Cloud Services

      # Step 7: Initialize Terraform configurations.
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init
        # Internal Dependencies:
        #   - main.tf: Defines the main Terraform configuration for infrastructure setup.
        #   - variables.tf: Defines variables used in Terraform configurations.
        #   - outputs.tf: Defines outputs for the Terraform configuration.
        #   - providers.tf: Specifies providers required for Terraform configurations.
        #   - backend.tf: Configures the backend for storing Terraform state.
        # Requirement Addressed: Initialize Terraform configurations to prepare for deployment.
        # Location: Technical Specification/INFRASTRUCTURE/Deployment Environment

      # Step 8: Apply Terraform configurations to deploy infrastructure.
      - name: Terraform Apply
        working-directory: infrastructure/terraform
        run: terraform apply -auto-approve
        # Requirement Addressed: Deploy the application infrastructure automatically to ensure consistent environments.
        # Location: Technical Specification/INFRASTRUCTURE/Deployment Environment